{
    "collab_server" : "",
    "contents" : "---\ntitle: \"final_project\"\nauthor: \"Qianshu Wang, He Jin, Siyuan Ding, Chuhan Zhou, Weijie Liu\"\ndate: \"2017/12/3\"\noutput: html_document\n---\n```{r, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE, collapse = TRUE, message = FALSE, warning = FALSE)\nlibrary(tidyverse)\nlibrary(rvest)\nlibrary(httr)\nlibrary(janitor)\nlibrary(lubridate)\nlibrary(readxl)\nlibrary(plotly)\nlibrary(forcats)\nlibrary(stringr)\ntheme_set(theme_bw())\n```\n\n```{r setup, include=FALSE}\nnyc_crime_2017 = read_csv(\"./NYPD_Complaint_Data_Current_YTD.csv\") %>%\n  clean_names()\n\nnyc_crime_2017 = nyc_crime_2017 %>%\n  mutate(cmplnt_fr_dt = as.Date(cmplnt_fr_dt, \"%m/%d/%Y\")) %>%\n  select(cmplnt_fr_dt, cmplnt_fr_tm, ky_cd, ofns_desc, law_cat_cd, boro_nm, prem_typ_desc, longitude, latitude) %>%\n  filter(year(cmplnt_fr_dt)  == 2017) %>%\n  rename(date = cmplnt_fr_dt, time = cmplnt_fr_tm, prem_typ = prem_typ_desc, ofns_type = law_cat_cd, boro = boro_nm)\n\ncrime_2017 = nyc_crime_2017 %>%\n    mutate(prem_typ = as.character(prem_typ))\n    crime_2017$prem_typ[grep(\"RESIDENCE\",crime_2017$prem_typ)] = \"RESIDENCE\"\n    \n```\n\n# Motivation \nThe violent crime rate in U.S increased by 3.4 percent nationwide in 2016 in US. As an international student, as well as a New Yorker, the public safety in NYC is always a concern to us, especially after the recent terrorists attack near the World Trade Center. Thus, our group decided to make a deeper investigation of the crime data and seek out some underlying reasons which led to the increase of crime rate.\n\n# Related work\nThe New York City Police Department provides overall crime dataset. NYPD also established a CompStat model, called [CompStat 2.0](https://compstat.nypdonline.org/2e5c3f4b-85c1-4635-83c6-22b27fe7c75c/view/89), providing greater specificity about crimes through an online interactive experience.\\\\\nOn the official website of new york city, there is also a [Crime Map](https://maps.nyc.gov/crime/) which enables people to view crime by precinct. This map includes crimes of seven major felonies.\n\n\nSince the dataset has `r dim(nyc_crime_2017)`, we randomly sample 50000 observations and creat an interactive map showing locations where the crimes in New York City occured:\n```{r}\n\nsample <- nyc_crime_2017[sample(1:nrow(nyc_crime_2017), 50000,replace=FALSE),]\n\nsample %>%\n  mutate(text_label = str_c(\"Offense desc:\", ofns_desc, ' Boro: ', boro)) %>% \n  plot_ly(x = ~longitude, y = ~latitude, type = \"scatter\", mode = \"markers\",\n          alpha = 0.5, \n          color = ~ofns_type,\n          text = ~text_label)\n\n```\n\n\n*Collect historic data of crimes\n```{r}\nnyc_hist_vio = read_excel(\"./historic/violation-offenses-2000-2016.xls\", range = \"A4:R6\") %>%\n  mutate(ofns_type = \"VIOLATION\")\n\nnyc_hist_felony_7 = read_excel(\"./historic/seven-major-felony-offenses-2000-2016.xls\", range = \"A5:R12\") %>%\n  mutate(ofns_type = \"FELONY\")\n\nnyc_hist_felony = read_excel(\"./historic/non-seven-major-felony-offenses-2000-2016.xls\", range = \"A5:R13\") %>%\n  mutate(ofns_type = \"FELONY\")\n\nnyc_hist_mis = read_excel(\"./historic/misdemeanor-offenses-2000-2016.xls\", range = \"A4:R21\")%>%\n  mutate(ofns_type = \"MISDEMEANOR\")\n```\n\nWe combine the information of crimes in past 16 years.\n```{r}\nnyc_crime_hist = nyc_hist_mis %>%\n  full_join(nyc_hist_felony) %>%\n  full_join(nyc_hist_felony_7) %>%\n  full_join(nyc_hist_vio) %>%\n  mutate(ofns_type = as.factor(ofns_type), ofns_desc = OFFENSE) %>%\n  select(-OFFENSE)\n\nnyc_crime_hist = nyc_crime_hist %>%\n  gather(key = year, value = count, \"2000\":\"2016\") %>%\n  group_by(year, ofns_type) %>%\n  summarize(n = sum(count)/12) %>%\n  full_join(nyc_crime_2017 %>%\n  group_by(ofns_type) %>%\n  summarize(n = n()/10) %>%\n  mutate(year = \"2017\")) %>%\n  ungroup()\n\nnyc_crime_hist %>%\n  mutate(year = as.numeric(year)) %>%\n  ggplot(aes(x = year, y = n, fill = ofns_type)) + geom_bar(stat = \"identity\")\n```\n\nBar chart showing crime number and offense type in different boros:\n\n\n```{r}\nbarplot = nyc_crime_2017 %>% \n  mutate(boro = fct_infreq(boro)) %>%\n  ggplot(aes(x = boro, fill = ofns_type)) + geom_bar() \n  \nggplotly(barplot)\n```\n\n\nThe graph reveals the number of crime vs boro. Among 5 boros, Brooklyn has the highest number of crime in the frist 10 months in 2017. Offense type includes felony, misdemeanor and violation. Misdemeanor is the most frequent offense types across these 5 boros. \n\n\nThe count of different type of crimes based on 2017 data\n```{r}\ncrime_tidy2 = nyc_crime_2017 %>% \n  group_by(date, ofns_type) %>% \n  summarize(crime_count = n())\n \nggplot(crime_tidy2, aes(x = date, y = crime_count, color = ofns_type)) + \n    geom_point(alpha = .6) + geom_smooth() + \n    theme(legend.position = \"bottom\")\n```\n\n\nWe then focused on crime data of current year.\n\nMake a plot of crime count versus hour in a day and group by boro.\n```{r}\nnyc_crime_2017 %>%\n  mutate(hour = hour(time)) %>%\n  group_by(hour, boro) %>%\n  summarize(n = n()) %>%\n  ggplot(aes(x = hour, y = n, color = boro)) + geom_point(alpha = 0.5) + geom_line()\n```\n\nMake a crime rate plot based on 2017 data\n```{r}\ncrime_tidy = nyc_crime_2017 %>% \n  separate(date, into = c(\"year\", \"month\",\"day\"), sep = \"-\") %>%\n  select(-year, -day) %>% \n  group_by(month,boro) %>% \n  summarize(crime_count = n())\n\ncrimetotal = ggplot(crime_tidy, aes(x = month, y = crime_count, color = boro)) + \n  geom_point() + geom_path(aes(group = boro)) +\n  theme(legend.position = \"bottom\")\n\ncrime_rate = crime_tidy %>% \n  mutate(popluation = recode(boro, \"BRONX\" = 1455720,\n                             \"BROOKLYN\" = 2629150,\n                             \"MANHATTAN\" = 1643734,\n                             \"QUEENS\" = 2333054,\n                             \"STATEN ISLAND\" = 476015)) %>% \n  mutate(crime_rate = (crime_count/popluation)*100000)\n\ncrimerate = ggplot(crime_rate, aes(x = month, y = crime_rate, color = boro)) + \n    geom_point() + geom_path(aes(group = boro)) + \n    theme(legend.position = \"bottom\")\n\nlibrary(gridExtra)\ngrid.arrange(crimetotal, crimerate, ncol = 2)\n```\n\n```{r}\ncrime_type = crime_2017 %>%\n    mutate(prem_typ=as.character(prem_typ),\n           boro=as.character(boro),\n           ofns_type=as.character(ofns_type),\n           ofns_desc=as.character(ofns_desc))\n    crime_type$prem_typ[grep(\"RESIDENCE\",crime_type$prem_typ)] = \"RESIDENCE\"\n    \nplace_offense = function(x){\n  crime_boro = crime_type %>% \n  filter(boro == x) %>%\n  group_by(prem_typ) %>%\n  summarize(crime = n()) %>%\n  arrange(desc(crime)) %>% \n  top_n(10)\n  top_place = crime_boro$prem_typ\n\n  mat <- matrix(ncol = 3, nrow = 4)\nfor (i in 1:4) {\n    offense_select = crime_type %>%\n    filter(prem_typ == top_place[i],\n           boro == x) %>%\n    group_by(ofns_desc) %>%\n    summarize(crime = n()) %>%\n    arrange(desc(crime)) %>%\n    top_n(3) \n    top_offense = offense_select$ofns_desc\n    mat[i,] <- top_offense\n}\n  return(mat)\n}\n\n\nplace_offense(\"QUEENS\")\nplace_offense(\"BROOKLYN\")\nplace_offense(\"STATEN ISLAND\")\nplace_offense(\"BRONX\")\nplace_offense(\"MANHATTAN\")\n```\n\n## Read crime number and visualization\n```{r}\nnyc_crime = read_csv(\"./NYPD_Complaint_Data_Current_YTD.csv\") %>%\n  clean_names() %>%\n  select(boro = boro_nm)\n\ncrime_number = nyc_crime %>%\n  group_by(boro) %>%\n  summarise(n = n()) \n\npopulation = read_csv(\"./NYC_Population_by_Borough.csv\") %>%\n  mutate(boro = Borough) %>%\n  select(-Borough)\n```\n\n## Calculate the crime rate by borough\n```{r}\nnyc_crime_population = left_join(population, crime_number, by = \"boro\") %>%\n  clean_names() %>%\n  mutate(population = as.numeric(population)) %>%\n  mutate(crime_rate = n / population * 100000)\n\n```\n\n## Read data: income\n```{r}\nurl = \"http://www.baruch.cuny.edu/nycdata/income-taxes/med_hhold_income.htm\"\n\nhousehold_income = read_html(url)\n\nincome_by_region = (household_income %>%\n                      html_nodes(css = \"table\"))[[1]] %>%\n  html_table() %>%\n  .[c(8,9,10,11,12), c(3,4)]\n  as_tibble()\n  \nincome_by_region = income_by_region %>%\n  clean_names() %>%\n  mutate(boro = x3, median_income = x4) %>%\n  select(-x3, -x4) \n```\n\n## Corelation between median income and crime rate\n```{r}\nincome = read_csv(\"./NYC_Income_by_Borough.csv\") %>%\n  clean_names() %>%\n  mutate(boro = borough) %>%\n  select(-borough)\n\ncrime_income = left_join(income, nyc_crime_population, by = \"boro\")\n\ncrime_income %>%\n  ggplot(aes(x = income, y = crime_rate, color = income)) + geom_point(alpha = 0.5) + geom_smooth() +\n  labs(title = \"Corelation between family median income and crime rate in each borough\",\n       x = \"Income Range\",\n       y = \"Crime rate\")\n```\n\n\nIn addition, we have a strong interest in finding potential factors that may associated with criminal rate. In this case, we choose household income level. After reading data from the web, data cleaning and data visualization, we are surprized to see from the scatter plot: Both lower-income borough and higher-income borough have an extremely high crime rate. For example, Bronx borough's family median income is 35176 dollars, associated with a crime rate of 0.029. That is, we expect 29 crime cases among every 1000 people. In contrast, Family income ranged between 60000 dollars to 70000 dollars tends to have the lowerest crime rate. Taking Queens as an example, we expect only 15 crime cases among every 1000 people.\n\n\n\n\n#####Top 10 words in of offense description:\n\n\n```{r}\nlibrary(tidytext)\n\ncrime_words = nyc_crime_2017 %>%\n  select(-longitude, -latitude) %>%\n  mutate(ofns_desc = str_to_lower(ofns_desc),\n         ofns_desc = str_replace(ofns_desc, \"[2-3]\",\"\"),\n  ofns_desc = as.character(ofns_desc)) %>%\n  unnest_tokens(word, ofns_desc)\n\ndata(stop_words)\n\ncrime_word_tidy = \n  anti_join(crime_words, stop_words)\n\n\ncrime_word_tidy %>% \n  count(word, sort = TRUE) %>% \n  top_n(10) %>% \n  mutate(word = fct_reorder(word, n)) %>% \n  ggplot(aes(x = word, y = n)) + \n  geom_bar(stat = \"identity\", fill = \"blue\", alpha = .6) + \n  coord_flip()\n```\n\n\nThe graph analyzes top 10 words showing in offense description. The most frequent one is larceny, which appears nearly 100000 times. Other frequent words including related, petit, assault, harrassment, etc. Most of them indicated the type of crime, which is consistent with what we expect. \n\n\n#####Comparison of distinct words in offense type of violation and felony.\n\n```{r}\nword_ratios = crime_word_tidy %>%\n  filter(ofns_type %in% c(\"VIOLATION\" , \"FELONY\")) %>%\n  count(word, ofns_type) %>%\n  group_by(word) %>% \n  filter(sum(n) >= 5) %>%\n  ungroup() %>%\n  spread(ofns_type, n, fill = 0) %>%\n  mutate(\n    violation_odds = (VIOLATION + 1) / (sum(VIOLATION) + 1),\n    felony_odds = (FELONY + 1) / (sum(FELONY) + 1),\n    log_OR = log(felony_odds / violation_odds)\n  ) %>%\n  arrange(desc(log_OR)) \n\n\nword_ratios %>%\n  mutate(pos_log_OR = ifelse(log_OR > 0,  \"felony_odds >violation_odds\" ,\"violation_odds > felony_odds\")) %>% \n  group_by(pos_log_OR) %>%\n  top_n(10, abs(log_OR)) %>%\n  ungroup() %>%\n  mutate(word = fct_reorder(word, log_OR)) %>%\n  ggplot(aes(word, log_OR, fill = pos_log_OR)) +\n  geom_col() +\n  coord_flip() +\n  ylab(\"log odds ratio (felony_odds/violation_odds)\") +\n  scale_fill_discrete(name = \"\") +\n  theme(legend.position = \"bottom\")\n\n```\n\nThe above chart compares distinct words(that is, words that appear much more frequently in one group than the other) in offense type of violation and felony. We can see that larceny, robbery, burglary,etc., appear more frequently in offense description of felony crime, while harrassment, gambling, loitering appear more frequently in offense description of violation crime. In terms of the results, we can obtain a basic picture of the difference between felony and violation. ",
    "created" : 1512496657536.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3837164203",
    "id" : "6405A1BF",
    "lastKnownWriteTime" : 1512535063,
    "last_content_update" : 1512535063603,
    "path" : "~/final_project_crime/final_project.Rmd",
    "project_path" : "final_project.Rmd",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}